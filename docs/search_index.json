[["index.html", "How to Use Urban Smart Sensor Chapter 1 Preface 1.1 About this document 1.2 Scope of this document", " How to Use Urban Smart Sensor Juhyeon Park 2022-04-01 Chapter 1 Preface 1.1 About this document This document provides useful information for individuals who are interested in urban sensing with commercially available lower-cost sensors. Many governments have launched a sensing project that involves a series of sensors placed around the city for capturing a massive amount of data including pedestrian, vehicle, temperature, and air quality. Here are some examples: the Array of Things (AoT) in Chicago, USA and S-DoT in Seoul, Korea. With the rapid development of the Internet-of-Things (IoTs), the do-it-yourself (DIY) technologies attempt to democratize these monitoring practices that may be the domain of expert scientists. Our target audience are individuals who want to learn how to build the urban DIY sensors. 1.2 Scope of this document This document demonstrates 1) how to build a smart sensor that detects pedestrians outdoors through WiFi sensing and 2) analyze the created data to produce meaningful insights. This includes: Getting WiFi data preprocessing WiFi data analysis 1.2.1 Why WiFi sensing? WiFi sensing technologies is one of them as a non-invasive tool for monitoring pedestrians outdoor via sensors that detect WiFi packets sent regularly by access points (APs) and WiFi-enabled devices. Most pedestrians today carry smart devices equipped with WiFi network interfaces, and each WiFi packet includes unique 48-bit addresses, known as Media Access Control (MAC) addresses, enabling a device to be tracked by multiple WiFi sensors. Many recent papers used the sensing technologies to identify pedestrian movement and behaviors123. Concept of WiFi sensing technologies Duives, D. C., van Oijen, T., &amp; Hoogendoorn, S. P. (2020). Enhancing Crowd Monitoring System Functionality through Data Fusion: Estimating Flow Rate from Wi-Fi Traces and Automated Counting System Data. Sensors (Basel), 20(21). https://doi.org/10.3390/s20216032 Soundararaj, B., Cheshire, J., &amp; Longley, P. (2019). Estimating real-time high-street footfall from Wi-Fi probe requests. International Journal of Geographical Information Science, 34(2), 325-343,. https://doi.org/10.1080/13658816.2019.1587616 Zhou, Y., Lau, B. P. L., Koh, Z., Yuen, C., &amp; Ng, B. K. K. (2020). Understanding Crowd Behaviors in a Social Event by Passive WiFi Sensing and Data Mining. IEEE internet of things journal, 1-1,. https://doi.org/10.1109/jiot.2020.2972062 "],["introduction.html", "Chapter 2 Introduction 2.1 Our sensor 2.2 Prerequisite", " Chapter 2 Introduction 2.1 Our sensor The sensor is a device that is designed to measure pedestrian behaviors. The following functions are available: Detecting WiFi packets Recording 2.2 Prerequisite Hardware Item Function Requirement Laptop and LAN cable To access and control your sensor Raspberry Pi board To build your sensor Pi 3B/3B+ or a higher model Pi WiFi adapter To capture WiFi packets Check your chipset that supports monitoring mode here Micro SD card and adapter To build and store the data At least 16 GB size Ethernet cable To connect the Pi with your laptop Portable power bank To run the sensor in outdoor environment +20000 mAh battery * It lasts one-day in our setting Pi camera To record the scene in the front of sensor Software Item Function Link PuTTY To access the Pi by your laptop here Raspberry Pi Imager To build Raspberry Pi OS here Raspberry Pi Imager To build Raspberry Pi OS here Skill Learning R and Python will be necessary for sensor building and data analysis. I recommend these classes: Data Science: Foundations using R Specialization and Python for Everybody Specialization "],["how-to-build-a-sensor.html", "Chapter 3 How to build a sensor 3.1 Getting started with Pi", " Chapter 3 How to build a sensor 3.1 Getting started with Pi Step 1: Install the OS of Pi on your SD card Plug in your SD card on your laptop and open the Raspberry OS imager and format your SD card. Write the Raspberry Pi OS on your SD card. Please enable ssh and set username (pi) and password (raspberry) in the setting before the writing. Step 2: Connect the Pi on your laptop This enables your laptop to access and control your Pi via a network cable. We dont need to buy and use a screen, keyboard and mouse that can be attached to the Pi. Plug in your SD card on the Pi and connect the Pi on your laptop via a Ethernet cable. Enable internet connection sharing option on your WiFI adapter. Find and remember the IP address of your Pi. 1) Press the window key button; 2) type in cmd, 3) type in arp -a, 4) search the IP address of Raspberry Pi by looking the first 6 characters of physical address MAC Address Lookup: MAC addresses of the all devices of Raspberry Pi Foundation start with B8:27:EB:xx:xx:xx or DC:A6:32:xx:xx:xx. Access your Pi by Putty by typing the IP address in the host name. Log in your Pi with the default setting (ID: pi, password: raspberry). Type ping 8.8.8.8 to see if your Pi can use the Internet. Step 3: Set up your Pi Update your Pi and packages: sudo apt-get update -y &amp;&amp; sudo apt-get upgrade -y Install packages we use: sudo apt-get install git python3-pip python3-dpkt python3-pcapy python3-schedule python3-picamera python3-dropbox libbluetooth-dev -y Set up the wireless setting on your phone hot spot sudo nano /etc/wpa_supplicant/wpa_supplicant.conf Put your mobile hot spot information (to me, juhyeon9087 for both SSID and password) country=GB network={ ssid=&quot;juhyeon9087&quot; psk=&quot;juhyeon9087&quot; key_mgmt=WPA-PSK } Set up camera by turning on interface Options - Legacy Camera sudo raspi-config Set up Dropbox on your Pi. Get your Dropbox access key first Create a app in the developer site of Dropbox here Select access more scopes: Move into Permissions and check more access Clone this script to the Raspberry Pi git clone https://github.com/andreafabrizi/Dropbox-Uploader.git Move into the cloned folder: cd Dropbox-Uploader Give the dropbox_uploader.sh script: sudo chmod +x dropbox_uploader.sh Run the dropbox_uploader.sh script: ./dropbox_uploader.sh Copy and paste your app key and app secret Cope and paste of the terminal URL to your search engine and put your access code Step 4: Test and play your your Pi Detecting WiFi packets Plug in a WiFi adapter on your Pi and type this: pi@raspberrypi:~ $ iwconfig lo no wireless extensions. eth0 no wireless extensions. wlan0 IEEE 802.11 ESSID:off/any Mode:Managed Access Point: Not-Associated Retry short limit:7 RTS thr:off Fragment thr:off Power Management:on wlan1 IEEE 802.11 ESSID:off/any Mode:Managed Access Point: Not-Associated Tx-Power=20 dBm Retry short long limit:2 RTS thr:off Fragment thr:off Power Management:off You will see wlan1, which you couldnt see before plugging in. wlan0 is the onboard WiFi. Install the aircrack-ng tool sudo apt-get install -y aircrack-ng Put the wlan1 in monitoring mode sudo airmon-ng start wlan1 With the monitoring mode adapter, execute this to scan for nearby WiFi devices sudo airodump-ng wlan1mon Sensor component Sending a file on your dropbox Move on the Dropbox-Uploader folder (cd .. is going back to home folder) cd Dropbox-Uploader Get the list of Dropbox file list root@raspberrypi:/home/pi/Dropbox-Uploader# ./dropbox_uploader.sh list &gt; Listing &quot;/&quot;... DONE [D] External Drive.dbx-external-drive Upload one file on your Dropbox root@raspberrypi:/home/pi/Dropbox-Uploader# ./dropbox_uploader.sh upload README.md / &gt; Uploading &quot;/home/pi/Dropbox-Uploader/README.md&quot; to &quot;/README.md&quot;... DONE Recheck the uploaded file on your Dropbox root@raspberrypi:/home/pi/Dropbox-Uploader# ./dropbox_uploader.sh list &gt; Listing &quot;/&quot;... DONE [D] External Drive.dbx-external-drive [F] 9373 README.md Detecting Bluetooth packets Clone a simple Bluetooth packet collector git clone https://github.com/MS3FGX/Bluelog.git Move on the folder cd Bluelog make and run the code by typing ./bluelog -vmfn Take a shot by Pi camera Check the attached camera vcgencmd get_camera supported=1 detected=1 Enter the command: raspistill -o test.jpg Step 5: Make our Pi as a sensor Download Filezlia and the code here Download FILE File Name. - Move the "],["wifi-data-analysis.html", "Chapter 4 WiFi Data Analysis 4.1 Preprocessing 4.2 Count 4.3 Location 4.4 Track 4.5 Identify 4.6 Activities", " Chapter 4 WiFi Data Analysis Using WiFi sensing technologies we identify five main metrics on pedestrian behaviors. Here is the figure illustrating the metrics. Count: How many people are present? Location  Where is that person? Track  Where was the person before? Identity  Who is the person? Activities  What is the person doing? The following sections cover how to generate the metrics. 4.1 Preprocessing Filter 1: Removal of random MAC addresses Filter 2: Removal of non-mobile devices Filter 3: Removal of rarely detected devices 4.2 Count 4.3 Location 4.4 Track 4.5 Identify 4.6 Activities You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " Chapter 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one.4 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2022) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations "]]
